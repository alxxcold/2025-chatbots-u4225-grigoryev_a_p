#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á
"""

import asyncio
import logging
from datetime import datetime, time, timedelta
import pytz
from bot import load_data, save_data

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

MSK_TZ = pytz.timezone('Europe/Moscow')

def check_scheduler_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    data = load_data()
    users = data.get('users', [])
    
    print(f"üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ: {len(users)}")
    if users:
        print(f"üë• ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users}")
    else:
        print("‚ö†Ô∏è –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π! –î–æ–±–∞–≤—å—Ç–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        test_user_id = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram user_id –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ").strip()
        if test_user_id:
            try:
                test_user_id = int(test_user_id)
                data['users'] = [test_user_id]
                save_data(data)
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_user_id}")
            except ValueError:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç user_id")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
    current_time = datetime.now(MSK_TZ)
    print(f"üïê –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è (–ú–°–ö): {current_time.strftime('%H:%M:%S %d.%m.%Y')}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    print("\nüìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π:")
    print("‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 19:20 - –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–µ —Ü–∏—Ç–∞—Ç—ã")
    print("‚Ä¢ –í—Ç–æ—Ä–Ω–∏–∫ –≤ 19:18 - –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ –≤—Å—Ç—Ä–µ—á–µ")
    print("‚Ä¢ –ß–µ—Ç–≤–µ—Ä–≥ –≤ 18:50 - –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≤—Å—Ç—Ä–µ—á–∏")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç —Å–ª–µ–¥—É—é—â–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
    current_weekday = current_time.weekday()  # 0=–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, 1=–≤—Ç–æ—Ä–Ω–∏–∫, ..., 6=–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
    
    print(f"\nüìÜ –¢–µ–∫—É—â–∏–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏: {['–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞', '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'][current_weekday]}")
    
    # –°–ª–µ–¥—É—é—â–∞—è –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∞—è —Ü–∏—Ç–∞—Ç–∞
    today_motivation = current_time.replace(hour=19, minute=20, second=0, microsecond=0)
    if current_time < today_motivation:
        print(f"‚è∞ –°–ª–µ–¥—É—é—â–∞—è –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∞—è —Ü–∏—Ç–∞—Ç–∞: —Å–µ–≥–æ–¥–Ω—è –≤ {today_motivation.strftime('%H:%M')}")
    else:
        tomorrow_motivation = current_time.replace(hour=19, minute=20, second=0, microsecond=0) + timedelta(days=1)
        print(f"‚è∞ –°–ª–µ–¥—É—é—â–∞—è –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∞—è —Ü–∏—Ç–∞—Ç–∞: –∑–∞–≤—Ç—Ä–∞ –≤ {tomorrow_motivation.strftime('%H:%M')}")
    
    # –°–ª–µ–¥—É—é—â–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ (–≤—Ç–æ—Ä–Ω–∏–∫)
    if current_weekday == 1:  # –≤—Ç–æ—Ä–Ω–∏–∫
        today_prep = current_time.replace(hour=19, minute=18, second=0, microsecond=0)
        if current_time < today_prep:
            print(f"‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ: —Å–µ–≥–æ–¥–Ω—è –≤ {today_prep.strftime('%H:%M')}")
        else:
            print("‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ: —É–∂–µ –ø—Ä–æ—à–ª–æ —Å–µ–≥–æ–¥–Ω—è")
    else:
        days_until_tuesday = (1 - current_weekday) % 7
        if days_until_tuesday == 0:
            days_until_tuesday = 7
        next_tuesday = current_time + timedelta(days=days_until_tuesday)
        next_tuesday = next_tuesday.replace(hour=19, minute=18, second=0, microsecond=0)
        print(f"‚è∞ –°–ª–µ–¥—É—é—â–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ: {next_tuesday.strftime('%d.%m.%Y –≤ %H:%M')}")
    
    # –°–ª–µ–¥—É—é—â–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –≤—Å—Ç—Ä–µ—á–µ (—á–µ—Ç–≤–µ—Ä–≥)
    if current_weekday == 3:  # —á–µ—Ç–≤–µ—Ä–≥
        today_meeting = current_time.replace(hour=18, minute=50, second=0, microsecond=0)
        if current_time < today_meeting:
            print(f"‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –≤—Å—Ç—Ä–µ—á–µ: —Å–µ–≥–æ–¥–Ω—è –≤ {today_meeting.strftime('%H:%M')}")
        else:
            print("‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –≤—Å—Ç—Ä–µ—á–µ: —É–∂–µ –ø—Ä–æ—à–ª–æ —Å–µ–≥–æ–¥–Ω—è")
    else:
        days_until_thursday = (3 - current_weekday) % 7
        if days_until_thursday == 0:
            days_until_thursday = 7
        next_thursday = current_time + timedelta(days=days_until_thursday)
        next_thursday = next_thursday.replace(hour=18, minute=50, second=0, microsecond=0)
        print(f"‚è∞ –°–ª–µ–¥—É—é—â–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –≤—Å—Ç—Ä–µ—á–µ: {next_thursday.strftime('%d.%m.%Y –≤ %H:%M')}")

if __name__ == "__main__":
    check_scheduler_status()
