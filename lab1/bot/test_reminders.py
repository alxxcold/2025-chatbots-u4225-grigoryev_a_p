#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
"""

import asyncio
import logging
from bot import send_motivational_quote, remind_meeting_preparation, remind_meeting_start, load_data, save_data

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

class MockBot:
    def __init__(self):
        self.sent_messages = []
    
    async def send_message(self, chat_id, text, parse_mode=None):
        print(f"\n{'='*60}")
        print(f"–û–¢–ü–†–ê–í–ö–ê –°–û–û–ë–©–ï–ù–ò–Ø:")
        print(f"–ü–æ–ª—É—á–∞—Ç–µ–ª—å: {chat_id}")
        print(f"–¢–µ–∫—Å—Ç: {text}")
        print(f"{'='*60}")
        self.sent_messages.append({
            'chat_id': chat_id,
            'text': text,
            'parse_mode': parse_mode
        })
        return True

class MockContext:
    def __init__(self):
        self.bot = MockBot()

async def test_reminders():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π"""
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    test_user_id = 123456789
    data = {'users': [test_user_id]}
    save_data(data)
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_user_id}")
    
    context = MockContext()
    
    # –¢–µ—Å—Ç –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏—Ö —Ü–∏—Ç–∞—Ç
    print("\n1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏—Ö —Ü–∏—Ç–∞—Ç:")
    try:
        await send_motivational_quote(context)
        print("‚úÖ –ú–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–µ —Ü–∏—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏—Ö —Ü–∏—Ç–∞—Ç–∞—Ö: {e}")
    
    # –¢–µ—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ –≤—Å—Ç—Ä–µ—á–µ
    print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ –≤—Å—Ç—Ä–µ—á–µ:")
    try:
        await remind_meeting_preparation(context)
        print("‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ –≤—Å—Ç—Ä–µ—á–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–∏ –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ: {e}")
    
    # –¢–µ—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –Ω–∞—á–∞–ª–µ –≤—Å—Ç—Ä–µ—á–∏
    print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –Ω–∞—á–∞–ª–µ –≤—Å—Ç—Ä–µ—á–∏:")
    try:
        await remind_meeting_start(context)
        print("‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≤—Å—Ç—Ä–µ—á–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–∏ –æ –≤—Å—Ç—Ä–µ—á–µ: {e}")
    
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {len(context.bot.sent_messages)} —Å–æ–æ–±—â–µ–Ω–∏–π")
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    asyncio.run(test_reminders())
